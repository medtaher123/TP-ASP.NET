// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP3.Models;

#nullable disable

namespace TP3.Migrations
{
    [DbContext(typeof(Tp3Context))]
    partial class Tp3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("CustomerMovie", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CustomerMovies", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = new Guid("7d3b6b62-f330-4f7c-8481-47307c980e7f"),
                            MovieId = new Guid("2d053bc3-e2d0-4a93-bc65-5d4f81dbaabb")
                        },
                        new
                        {
                            CustomerId = new Guid("7d3b6b62-f330-4f7c-8481-47307c980e7f"),
                            MovieId = new Guid("a8bb74ab-be59-47a5-9e7c-c75948efa1ea")
                        },
                        new
                        {
                            CustomerId = new Guid("08e29ae7-79b1-4960-9580-86d6fc37c370"),
                            MovieId = new Guid("a8bb74ab-be59-47a5-9e7c-c75948efa1ea")
                        });
                });

            modelBuilder.Entity("TP3.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MembershiptypeId")
                        .HasColumnType("TEXT")
                        .HasColumnName("membershiptype_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MembershiptypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d3b6b62-f330-4f7c-8481-47307c980e7f"),
                            MembershiptypeId = new Guid("1b78f2e4-a838-4f2b-83e0-cb02f49ec1a9"),
                            Name = "Customer1"
                        },
                        new
                        {
                            Id = new Guid("08e29ae7-79b1-4960-9580-86d6fc37c370"),
                            MembershiptypeId = new Guid("31fc5653-750b-4d7c-8dcb-740028211f90"),
                            Name = "Customer2"
                        });
                });

            modelBuilder.Entity("TP3.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GenreName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fda6b224-84e2-4214-94ec-ab6cb671ccf9"),
                            GenreName = "Action"
                        },
                        new
                        {
                            Id = new Guid("92311c05-b31e-4197-8b0e-5dfca27f511a"),
                            GenreName = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("aa9ee57c-0ef4-405c-99a1-ca70835dc053"),
                            GenreName = "Drama"
                        });
                });

            modelBuilder.Entity("TP3.Models.Membershiptype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountRate")
                        .HasColumnType("NUMERIC");

                    b.Property<int?>("DurationInMonth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SignUpFee")
                        .HasColumnType("NUMERIC");

                    b.HasKey("Id");

                    b.ToTable("Membershiptypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b78f2e4-a838-4f2b-83e0-cb02f49ec1a9"),
                            DiscountRate = 10m,
                            DurationInMonth = 6,
                            Name = "Basic",
                            SignUpFee = 50m
                        },
                        new
                        {
                            Id = new Guid("31fc5653-750b-4d7c-8dcb-740028211f90"),
                            DiscountRate = 20m,
                            DurationInMonth = 12,
                            Name = "Premium",
                            SignUpFee = 100m
                        });
                });

            modelBuilder.Entity("TP3.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("TEXT")
                        .HasColumnName("genre_id");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d053bc3-e2d0-4a93-bc65-5d4f81dbaabb"),
                            GenreId = new Guid("fda6b224-84e2-4214-94ec-ab6cb671ccf9"),
                            Name = "Movie 1",
                            ReleaseDate = new DateTime(2024, 8, 22, 2, 13, 47, 158, DateTimeKind.Local).AddTicks(4488)
                        },
                        new
                        {
                            Id = new Guid("a8bb74ab-be59-47a5-9e7c-c75948efa1ea"),
                            GenreId = new Guid("92311c05-b31e-4197-8b0e-5dfca27f511a"),
                            Name = "Movie 2",
                            ReleaseDate = new DateTime(2024, 10, 22, 2, 13, 47, 158, DateTimeKind.Local).AddTicks(4532)
                        },
                        new
                        {
                            Id = new Guid("bd7a36d7-3262-49ea-97cd-72ef543cb37b"),
                            GenreId = new Guid("aa9ee57c-0ef4-405c-99a1-ca70835dc053"),
                            Name = "Movie 3",
                            ReleaseDate = new DateTime(2024, 11, 22, 2, 13, 47, 158, DateTimeKind.Local).AddTicks(4536)
                        });
                });

            modelBuilder.Entity("CustomerMovie", b =>
                {
                    b.HasOne("TP3.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .IsRequired();

                    b.HasOne("TP3.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .IsRequired();
                });

            modelBuilder.Entity("TP3.Models.Customer", b =>
                {
                    b.HasOne("TP3.Models.Membershiptype", "Membershiptype")
                        .WithMany("Customers")
                        .HasForeignKey("MembershiptypeId");

                    b.Navigation("Membershiptype");
                });

            modelBuilder.Entity("TP3.Models.Movie", b =>
                {
                    b.HasOne("TP3.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TP3.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("TP3.Models.Membershiptype", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
