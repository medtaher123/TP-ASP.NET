// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP7.Infrastructure.Persistence.DBContexts;

#nullable disable

namespace TP7.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    partial class SQLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("CustomerMovie", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CustomerMovies", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = new Guid("1ce81473-96ad-43ad-ab4d-4b79ea54480a"),
                            MovieId = new Guid("10b99739-3add-4de2-9535-d2e02008f942")
                        },
                        new
                        {
                            CustomerId = new Guid("1ce81473-96ad-43ad-ab4d-4b79ea54480a"),
                            MovieId = new Guid("1354da16-62a8-428e-9820-c001ef5868f0")
                        },
                        new
                        {
                            CustomerId = new Guid("02d25b7b-aa5a-4fea-b40c-fa843a788f28"),
                            MovieId = new Guid("1354da16-62a8-428e-9820-c001ef5868f0")
                        });
                });

            modelBuilder.Entity("TP7.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MembershiptypeId")
                        .HasColumnType("TEXT")
                        .HasColumnName("membershiptype_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MembershiptypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ce81473-96ad-43ad-ab4d-4b79ea54480a"),
                            MembershiptypeId = new Guid("48332a5e-6cf8-4c92-9255-3579431ec739"),
                            Name = "Customer1"
                        },
                        new
                        {
                            Id = new Guid("02d25b7b-aa5a-4fea-b40c-fa843a788f28"),
                            MembershiptypeId = new Guid("4aa675bf-b31a-4964-8ad3-094db9f95f5d"),
                            Name = "Customer2"
                        });
                });

            modelBuilder.Entity("TP7.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GenreName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30d52886-c2d4-48f5-acf8-5702023674a0"),
                            GenreName = "Action"
                        },
                        new
                        {
                            Id = new Guid("e18fab3d-78f5-4ade-a3c8-c365e9602c62"),
                            GenreName = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("37fb9b54-8f4f-44fe-9cad-c30f21e91b51"),
                            GenreName = "Drama"
                        });
                });

            modelBuilder.Entity("TP7.Domain.Entities.Membershiptype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountRate")
                        .HasColumnType("NUMERIC");

                    b.Property<int?>("DurationInMonth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SignUpFee")
                        .HasColumnType("NUMERIC");

                    b.HasKey("Id");

                    b.ToTable("Membershiptypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48332a5e-6cf8-4c92-9255-3579431ec739"),
                            DiscountRate = 10m,
                            DurationInMonth = 6,
                            Name = "Basic",
                            SignUpFee = 50m
                        },
                        new
                        {
                            Id = new Guid("4aa675bf-b31a-4964-8ad3-094db9f95f5d"),
                            DiscountRate = 20m,
                            DurationInMonth = 12,
                            Name = "Premium",
                            SignUpFee = 100m
                        });
                });

            modelBuilder.Entity("TP7.Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("TEXT")
                        .HasColumnName("genre_id");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10b99739-3add-4de2-9535-d2e02008f942"),
                            GenreId = new Guid("30d52886-c2d4-48f5-acf8-5702023674a0"),
                            Name = "Movie 1",
                            ReleaseDate = new DateTime(2024, 9, 27, 23, 58, 50, 378, DateTimeKind.Local).AddTicks(4521)
                        },
                        new
                        {
                            Id = new Guid("1354da16-62a8-428e-9820-c001ef5868f0"),
                            GenreId = new Guid("e18fab3d-78f5-4ade-a3c8-c365e9602c62"),
                            Name = "Movie 2",
                            ReleaseDate = new DateTime(2024, 11, 27, 23, 58, 50, 378, DateTimeKind.Local).AddTicks(4541)
                        },
                        new
                        {
                            Id = new Guid("64bd5188-70b6-4a19-add3-e95fc1d04db7"),
                            GenreId = new Guid("37fb9b54-8f4f-44fe-9cad-c30f21e91b51"),
                            Name = "Movie 3",
                            ReleaseDate = new DateTime(2024, 12, 27, 23, 58, 50, 378, DateTimeKind.Local).AddTicks(4544)
                        });
                });

            modelBuilder.Entity("CustomerMovie", b =>
                {
                    b.HasOne("TP7.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .IsRequired();

                    b.HasOne("TP7.Domain.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .IsRequired();
                });

            modelBuilder.Entity("TP7.Domain.Entities.Customer", b =>
                {
                    b.HasOne("TP7.Domain.Entities.Membershiptype", "Membershiptype")
                        .WithMany("Customers")
                        .HasForeignKey("MembershiptypeId");

                    b.Navigation("Membershiptype");
                });

            modelBuilder.Entity("TP7.Domain.Entities.Movie", b =>
                {
                    b.HasOne("TP7.Domain.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TP7.Domain.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("TP7.Domain.Entities.Membershiptype", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
